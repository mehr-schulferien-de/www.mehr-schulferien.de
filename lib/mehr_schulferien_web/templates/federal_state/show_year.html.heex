<div class="mt-0 sm:mt-1">
  <%!-- Combine school vacation periods with public holiday periods for calculations --%>
  <% all_periods = @periods ++ @public_periods %>
  <div>
    <div class="flex flex-col sm:flex-row items-start sm:items-center justify-between mb-4">
      <h1 class="text-2xl sm:text-3xl font-bold text-gray-900 text-left">
        Schulferien <%= @federal_state.name %>
      </h1>

      <div class="flex items-center w-full sm:w-auto mt-4 sm:mt-0">
        <%= if length(@years_with_data) > 0 do %>
          <div class="inline-flex rounded-md shadow-sm w-full" role="group">
            <% # Logic for pagination with different max visible years for mobile and desktop
            mobile_max_visible = 3
            current_index = Enum.find_index(@years_with_data, fn y -> y == @year end) || 0
            total_years = length(@years_with_data)

            # Calculate which years to show for mobile
            {mobile_visible_years, _} =
              cond do
                total_years <= mobile_max_visible ->
                  # Show all years if total is 3 or less
                  {@years_with_data, false}

                current_index <= 0 ->
                  # Current year is the first, show first 3
                  {Enum.take(@years_with_data, mobile_max_visible), false}

                current_index >= total_years - 1 ->
                  # Current year is the last, show last 3
                  {Enum.take(@years_with_data, -mobile_max_visible), false}

                true ->
                  # Current year is in the middle, show 1 before and 1 after when possible
                  start_idx = max(0, current_index - 1)
                  end_idx = min(total_years - 1, current_index + 1)

                  years = Enum.slice(@years_with_data, start_idx..end_idx)
                  {years, false}
              end

            # Determine if prev/next arrows should be enabled
            prev_year = if current_index > 0, do: Enum.at(@years_with_data, current_index - 1)

            next_year =
              if current_index < total_years - 1, do: Enum.at(@years_with_data, current_index + 1) %>

            <% # Mobile pagination (3 years) %>
            <div class="flex w-full">
              <%= if prev_year do %>
                <%= link to: Routes.federal_state_path(@conn, :show_year, @country.slug, @federal_state.slug, prev_year), 
                        class: "px-4 py-2 text-sm font-medium bg-white text-gray-700 border border-gray-200 hover:bg-gray-100 hover:text-blue-700 rounded-l-lg flex items-center" do %>
                  <svg
                    class="h-5 w-5"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M15 19l-7-7 7-7"
                    >
                    </path>
                  </svg>
                <% end %>
              <% else %>
                <span class="px-4 py-2 text-sm font-medium bg-gray-100 text-gray-400 border border-gray-200 rounded-l-lg cursor-not-allowed flex items-center">
                  <svg
                    class="h-5 w-5"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M15 19l-7-7 7-7"
                    >
                    </path>
                  </svg>
                </span>
              <% end %>

              <div class="flex flex-grow">
                <%= for year <- mobile_visible_years do %>
                  <%= if year == @year do %>
                    <span class="px-4 py-2 text-sm font-medium bg-blue-600 text-white border border-blue-600 flex-1 text-center">
                      <%= year %>
                    </span>
                  <% else %>
                    <%= link to: Routes.federal_state_path(@conn, :show_year, @country.slug, @federal_state.slug, year), 
                            class: "px-4 py-2 text-sm font-medium bg-white text-gray-700 border border-gray-200 hover:bg-gray-100 hover:text-blue-700 flex-1 text-center" do %>
                      <%= year %>
                    <% end %>
                  <% end %>
                <% end %>
              </div>

              <%= if next_year do %>
                <%= link to: Routes.federal_state_path(@conn, :show_year, @country.slug, @federal_state.slug, next_year), 
                        class: "px-4 py-2 text-sm font-medium bg-white text-gray-700 border border-gray-200 hover:bg-gray-100 hover:text-blue-700 rounded-r-lg flex items-center" do %>
                  <svg
                    class="h-5 w-5"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 5l7 7-7 7"
                    >
                    </path>
                  </svg>
                <% end %>
              <% else %>
                <span class="px-4 py-2 text-sm font-medium bg-gray-100 text-gray-400 border border-gray-200 rounded-r-lg cursor-not-allowed flex items-center">
                  <svg
                    class="h-5 w-5"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 5l7 7-7 7"
                    >
                    </path>
                  </svg>
                </span>
              <% end %>
            </div>
          </div>
        <% else %>
          <span class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-lg">
            <%= @year %>
          </span>
        <% end %>
      </div>
    </div>

    <% has_data = length(@periods) > 0 %>
    <%= if has_data do %>
      <div class="overflow-x-auto mt-4">
        <table class="min-w-full bg-white border border-gray-200">
          <thead>
            <tr>
              <th class="px-2 sm:px-4 py-2 sm:py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">
                Name
              </th>
              <th class="px-2 sm:px-4 py-2 sm:py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">
                Termin
              </th>
              <th class="hidden sm:table-cell px-2 sm:px-4 py-2 sm:py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">
                Wochentage
              </th>
              <th class="px-2 sm:px-4 py-2 sm:py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">
                Dauer*
              </th>
            </tr>
          </thead>
          <tbody class="divide-y divide-gray-200">
            <%= for period <- @periods do %>
              <tr
                class="hover:bg-gray-50 cursor-pointer"
                onclick={"window.location.href='#month-#{period.starts_on.month}'"}
              >
                <td class="px-2 sm:px-4 py-2 sm:py-3 text-sm font-medium text-gray-900">
                  <%= cond do %>
                    <% is_map_key(period.holiday_or_vacation_type, :colloquial) && period.holiday_or_vacation_type.colloquial && period.holiday_or_vacation_type.colloquial != "" -> %>
                      <%= period.holiday_or_vacation_type.colloquial %>
                    <% is_map_key(period.holiday_or_vacation_type, :colloquial_name) && period.holiday_or_vacation_type.colloquial_name && period.holiday_or_vacation_type.colloquial_name != "" -> %>
                      <%= period.holiday_or_vacation_type.colloquial_name %>
                    <% true -> %>
                      <%= period.holiday_or_vacation_type.name %>
                  <% end %>
                </td>
                <td class="px-2 sm:px-4 py-2 sm:py-3 text-sm text-gray-700">
                  <span class="whitespace-nowrap">
                    <span class="sm:hidden">
                      <%= Calendar.strftime(period.starts_on, "%d.%m.") %>
                    </span>
                    <span class="hidden sm:inline">
                      <%= Calendar.strftime(period.starts_on, "%d.%m.%Y") %>
                    </span>
                    -
                    <span class="sm:hidden">
                      <%= Calendar.strftime(period.ends_on, "%d.%m.") %>
                    </span>
                    <span class="hidden sm:inline">
                      <%= Calendar.strftime(period.ends_on, "%d.%m.%Y") %>
                    </span>
                  </span>
                </td>
                <td class="hidden sm:table-cell px-2 sm:px-4 py-2 sm:py-3 text-sm text-gray-700 whitespace-nowrap">
                  <% start_day = Date.day_of_week(period.starts_on)
                  end_day = Date.day_of_week(period.ends_on)

                  start_day_german =
                    case start_day do
                      1 -> "Montag"
                      2 -> "Dienstag"
                      3 -> "Mittwoch"
                      4 -> "Donnerstag"
                      5 -> "Freitag"
                      6 -> "Samstag"
                      7 -> "Sonntag"
                    end

                  end_day_german =
                    case end_day do
                      1 -> "Montag"
                      2 -> "Dienstag"
                      3 -> "Mittwoch"
                      4 -> "Donnerstag"
                      5 -> "Freitag"
                      6 -> "Samstag"
                      7 -> "Sonntag"
                    end %>
                  <%= start_day_german %> - <%= end_day_german %>
                </td>
                <td class="px-2 sm:px-4 py-2 sm:py-3 text-sm text-gray-700">
                  <% days = Date.diff(period.ends_on, period.starts_on) + 1 %>
                  <% effective_duration = calculate_effective_duration(period, all_periods) %>
                  <% difference = effective_duration - days %>

                  <%= days %> <%= if days == 1, do: "Tag", else: "Tage" %>
                  <%= if difference != 0 do %>
                    <span class="text-gray-500">(+<%= difference %>)</span>
                  <% end %>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>

        <% has_differences =
          Enum.any?(@periods, fn period ->
            days = Date.diff(period.ends_on, period.starts_on) + 1
            effective_duration = calculate_effective_duration(period, all_periods)
            effective_duration != days
          end) %>

        <%= if has_differences do %>
          <div class="text-xs text-gray-500 mt-2">
            * Die effektive Dauer (das + in der Klammer) enthält angrenzende Wochenenden oder andere Feiertage, die zusätzlich freie Tage ergeben.
          </div>
        <% end %>
      </div>
    <% else %>
      <div
        class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-4"
        role="alert"
      >
        <p class="font-bold">Information</p>
        <p>Für das Jahr <%= @year %> liegen keine Feriendaten vor.</p>
        <%= if length(@years_with_data) > 0 do %>
          <p class="mt-2">
            Bitte wählen Sie eines der verfügbaren Jahre:
            <%= for available_year <- @years_with_data do %>
              <%= link("#{available_year}",
                to:
                  Routes.federal_state_path(
                    @conn,
                    :show_year,
                    @country.slug,
                    @federal_state.slug,
                    available_year
                  ),
                class: "text-blue-600 hover:underline"
              ) %><%= if available_year != List.last(@years_with_data), do: ", ", else: "" %>
            <% end %>
          </p>
        <% end %>
      </div>
    <% end %>

    <div class="mt-8">
      <h2 class="text-xl sm:text-2xl font-bold text-gray-900 mb-4">Kalenderansicht</h2>
      <div class="calendar-container">
        <!-- Calendar content will be added here -->
      </div>
      <!-- Legende für die Farbkennzeichnung -->
      <div class="mb-4 flex flex-wrap items-center gap-4 text-sm">
        <div class="flex items-center">
          <div class="w-4 h-4 bg-blue-100 border border-gray-200 mr-1"></div>
          <span>Feiertage</span>
        </div>
        <div class="flex items-center">
          <div class="w-4 h-4 bg-green-100 border border-gray-200 mr-1"></div>
          <span>Schulferien</span>
        </div>
        <div class="flex items-center">
          <div class="w-4 h-4 bg-gray-100 border border-gray-200 mr-1"></div>
          <span>Wochenenden</span>
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        <%= for month <- 1..12 do %>
          <% month_name =
            case month do
              1 -> "Januar"
              2 -> "Februar"
              3 -> "März"
              4 -> "April"
              5 -> "Mai"
              6 -> "Juni"
              7 -> "Juli"
              8 -> "August"
              9 -> "September"
              10 -> "Oktober"
              11 -> "November"
              12 -> "Dezember"
            end %>
          <% first_day_of_month = Date.new!(@year, month, 1) %>
          <% first_weekday = Date.day_of_week(first_day_of_month) %>
          <% days_in_month = Date.days_in_month(first_day_of_month) %>

          <% month_id = "month-#{month}" %>
          <section class="bg-white rounded shadow p-6 h-full" id={month_id}>
            <div class="bridge-day-timeline">
              <table class="border-collapse w-full table-fixed">
                <thead>
                  <tr>
                    <th
                      class="text-left py-0.5 pl-1 pr-0 font-semibold text-base border border-gray-200 bg-gray-50"
                      colspan="7"
                    >
                      <%= month_name %> <%= @year %>
                    </th>
                  </tr>
                  <tr>
                    <td class="bg-gray-50 text-[11px] p-0.5 font-normal h-5 border border-gray-200 text-center w-1/12">
                      Mo
                    </td>
                    <td class="bg-gray-50 text-[11px] p-0.5 font-normal h-5 border border-gray-200 text-center w-1/12">
                      Di
                    </td>
                    <td class="bg-gray-50 text-[11px] p-0.5 font-normal h-5 border border-gray-200 text-center w-1/12">
                      Mi
                    </td>
                    <td class="bg-gray-50 text-[11px] p-0.5 font-normal h-5 border border-gray-200 text-center w-1/12">
                      Do
                    </td>
                    <td class="bg-gray-50 text-[11px] p-0.5 font-normal h-5 border border-gray-200 text-center w-1/12">
                      Fr
                    </td>
                    <td class="bg-gray-50 text-[11px] p-0.5 font-normal h-5 border border-gray-200 text-center w-1/12">
                      Sa
                    </td>
                    <td class="bg-gray-50 text-[11px] p-0.5 font-normal h-5 border border-gray-200 text-center w-1/12">
                      So
                    </td>
                  </tr>
                </thead>

                <tbody>
                  <% # Calculate the day offset based on the first day of month
                  start_day = 1 - (first_weekday - 1) %>

                  <%= for week <- 0..5 do %>
                    <% week_start_day = start_day + week * 7
                    # Check if this row has any valid days
                    has_days =
                      Enum.any?(1..7, fn weekday ->
                        day = week_start_day + weekday - 1
                        day > 0 and day <= days_in_month
                      end) %>
                    <%= if has_days do %>
                      <tr>
                        <%= for weekday <- 1..7 do %>
                          <% day = week_start_day + weekday - 1 %>
                          <% current_date =
                            if day > 0 and day <= days_in_month do
                              Date.new!(@year, month, day)
                            else
                              nil
                            end %>

                          <% is_public_holiday =
                            if current_date do
                              Enum.any?(@public_periods, fn period ->
                                Date.compare(period.starts_on, current_date) != :gt &&
                                  Date.compare(period.ends_on, current_date) != :lt
                              end)
                            else
                              false
                            end %>

                          <% is_vacation =
                            if current_date do
                              Enum.any?(@periods, fn period ->
                                Date.compare(period.starts_on, current_date) != :gt &&
                                  Date.compare(period.ends_on, current_date) != :lt
                              end)
                            else
                              false
                            end %>

                          <td class={[
                            "border border-gray-200 text-center py-1 w-1/12 text-xs h-[30px]",
                            cond do
                              is_public_holiday -> "bg-blue-100"
                              is_vacation -> "bg-green-100"
                              weekday >= 6 -> "bg-gray-100"
                              true -> ""
                            end
                          ]}>
                            <%= if day > 0 and day <= days_in_month do %>
                              <%= day %>.
                            <% end %>
                          </td>
                        <% end %>
                      </tr>
                    <% end %>
                  <% end %>
                </tbody>
              </table>
            </div>
            <!-- Display holidays and vacations for this month -->
            <% month_periods =
              Enum.filter(@periods, fn period ->
                period.starts_on.month == month || period.ends_on.month == month ||
                  (period.starts_on.month < month && period.ends_on.month > month)
              end) %>

            <% month_public_periods =
              Enum.filter(@public_periods, fn period ->
                period.starts_on.month == month || period.ends_on.month == month ||
                  (period.starts_on.month < month && period.ends_on.month > month)
              end) %>

            <%= if length(month_periods) > 0 || length(month_public_periods) > 0 do %>
              <div class="mt-3 text-xs border-t border-gray-200 pt-2">
                <ul class="space-y-1">
                  <%= for period <- month_public_periods do %>
                    <li class="flex justify-between">
                      <span class="font-medium text-blue-700">
                        <%= cond do %>
                          <% is_map_key(period.holiday_or_vacation_type, :colloquial) && period.holiday_or_vacation_type.colloquial && period.holiday_or_vacation_type.colloquial != "" -> %>
                            <%= period.holiday_or_vacation_type.colloquial %>
                          <% is_map_key(period.holiday_or_vacation_type, :colloquial_name) && period.holiday_or_vacation_type.colloquial_name && period.holiday_or_vacation_type.colloquial_name != "" -> %>
                            <%= period.holiday_or_vacation_type.colloquial_name %>
                          <% true -> %>
                            <%= period.holiday_or_vacation_type.name %>
                        <% end %>
                      </span>
                      <span class="text-gray-600">
                        <%= if Date.compare(period.starts_on, period.ends_on) == :eq do %>
                          <%= Calendar.strftime(period.starts_on, "%d.%m.") %>
                        <% else %>
                          <%= if period.starts_on.year != period.ends_on.year do %>
                            <%= Calendar.strftime(period.starts_on, "%d.%m.%Y") %> - <%= Calendar.strftime(
                              period.ends_on,
                              "%d.%m.%Y"
                            ) %>
                          <% else %>
                            <%= Calendar.strftime(period.starts_on, "%d.%m.") %> - <%= Calendar.strftime(
                              period.ends_on,
                              "%d.%m."
                            ) %>
                          <% end %>
                        <% end %>
                      </span>
                    </li>
                  <% end %>

                  <%= for period <- month_periods do %>
                    <li class="flex justify-between">
                      <span class="font-medium text-green-700">
                        <%= cond do %>
                          <% is_map_key(period.holiday_or_vacation_type, :colloquial) && period.holiday_or_vacation_type.colloquial && period.holiday_or_vacation_type.colloquial != "" -> %>
                            <%= period.holiday_or_vacation_type.colloquial %>
                          <% is_map_key(period.holiday_or_vacation_type, :colloquial_name) && period.holiday_or_vacation_type.colloquial_name && period.holiday_or_vacation_type.colloquial_name != "" -> %>
                            <%= period.holiday_or_vacation_type.colloquial_name %>
                          <% true -> %>
                            <%= period.holiday_or_vacation_type.name %>
                        <% end %>
                        <% days = Date.diff(period.ends_on, period.starts_on) + 1 %>
                        <% effective_duration = calculate_effective_duration(period, all_periods) %>
                        <% difference = effective_duration - days %>
                        <span class="font-normal ml-1">
                          (<%= days %>
                          <%= if difference != 0 do %>
                            <span class="text-gray-500">+ <%= difference %></span>
                          <% end %>
                          <%= if days == 1, do: "Tag", else: "Tage" %>)
                        </span>
                      </span>
                      <span class="text-gray-600">
                        <%= if Date.compare(period.starts_on, period.ends_on) == :eq do %>
                          <%= Calendar.strftime(period.starts_on, "%d.%m.") %>
                        <% else %>
                          <%= if period.starts_on.year != period.ends_on.year do %>
                            <%= Calendar.strftime(period.starts_on, "%d.%m.%Y") %> - <%= Calendar.strftime(
                              period.ends_on,
                              "%d.%m.%Y"
                            ) %>
                          <% else %>
                            <%= Calendar.strftime(period.starts_on, "%d.%m.") %> - <%= Calendar.strftime(
                              period.ends_on,
                              "%d.%m."
                            ) %>
                          <% end %>
                        <% end %>
                      </span>
                    </li>
                  <% end %>
                </ul>
              </div>
            <% end %>
          </section>
        <% end %>
      </div>
    </div>
  </div>
</div>
