<div class="mt-0 sm:mt-1">
  <nav class="mb-4">
    <ol class="flex space-x-2 text-sm">
      <li><%= link "Start", to: Routes.page_path(@conn, :new), class: "text-blue-600 hover:text-blue-800" %></li>
      <li class="flex items-center">
        <svg class="h-4 w-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </li>
      <li><%= link @country.name, to: Routes.country_path(@conn, :show, @country.slug), class: "text-blue-600 hover:text-blue-800" %></li>
      <li class="flex items-center">
        <svg class="h-4 w-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </li>
      <li class="text-blue-600"><%= @federal_state.name %></li>
      <li class="flex items-center">
        <svg class="h-4 w-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </li>
      <li class="text-gray-600"><%= @year %></li>
    </ol>
  </nav>

  <div>
    <div class="flex flex-col sm:flex-row items-start sm:items-center justify-between mb-4">
      <h1 class="text-2xl sm:text-3xl font-bold text-gray-900 text-left">Schulferien <%= @federal_state.name %> <%= @year %></h1>
      
      <div class="flex items-center space-x-2 mt-4 sm:mt-0">
        <%= if length(@years_with_data) > 0 do %>
          <div class="inline-flex rounded-md shadow-sm" role="group">
            <% 
              # Logic for pagination with max 4 visible years
              max_visible = 4
              current_index = Enum.find_index(@years_with_data, fn y -> y == @year end) || 0
              total_years = length(@years_with_data)
              
              # Calculate which years to show
              {visible_years, _} = cond do
                total_years <= max_visible ->
                  # Show all years if total is 4 or less
                  {@years_with_data, false}
                current_index <= 1 ->
                  # Current year is among the first two, show first 4
                  {Enum.take(@years_with_data, max_visible), false}
                current_index >= total_years - 2 ->
                  # Current year is among the last two, show last 4
                  {Enum.take(@years_with_data, -max_visible), false}
                true ->
                  # Current year is in the middle, show 2 before and after when possible
                  start_idx = max(0, current_index - 1)
                  end_idx = min(total_years - 1, current_index + 2)
                  
                  years = Enum.slice(@years_with_data, start_idx..end_idx)
                  {years, false}
              end
              
              # Determine if prev/next arrows should be enabled
              prev_year = if current_index > 0, do: Enum.at(@years_with_data, current_index - 1)
              next_year = if current_index < total_years - 1, do: Enum.at(@years_with_data, current_index + 1)
            %>
            
            <%= if prev_year do %>
              <%= link to: Routes.federal_state_path(@conn, :show_year, @country.slug, @federal_state.slug, prev_year), 
                      class: "px-4 py-2 text-sm font-medium bg-white text-gray-700 border border-gray-200 hover:bg-gray-100 hover:text-blue-700 rounded-l-lg" do %>
                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
              <% end %>
            <% else %>
              <span class="px-4 py-2 text-sm font-medium bg-gray-100 text-gray-400 border border-gray-200 rounded-l-lg cursor-not-allowed">
                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
              </span>
            <% end %>
            
            <%= for year <- visible_years do %>
              <%= link to: Routes.federal_state_path(@conn, :show_year, @country.slug, @federal_state.slug, year), 
                      class: if(year == @year, 
                              do: "px-4 py-2 text-sm font-medium bg-blue-600 text-white border border-blue-600", 
                              else: "px-4 py-2 text-sm font-medium bg-white text-gray-700 border border-gray-200 hover:bg-gray-100 hover:text-blue-700") do %>
                <%= year %>
              <% end %>
            <% end %>
            
            <%= if next_year do %>
              <%= link to: Routes.federal_state_path(@conn, :show_year, @country.slug, @federal_state.slug, next_year), 
                      class: "px-4 py-2 text-sm font-medium bg-white text-gray-700 border border-gray-200 hover:bg-gray-100 hover:text-blue-700 rounded-r-lg" do %>
                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              <% end %>
            <% else %>
              <span class="px-4 py-2 text-sm font-medium bg-gray-100 text-gray-400 border border-gray-200 rounded-r-lg cursor-not-allowed">
                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </span>
            <% end %>
          </div>
        <% else %>
          <span class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-lg">
            <%= @year %>
          </span>
        <% end %>
      </div>
    </div>

    <% has_data = length(@periods) > 0 %>
    <%= if has_data do %>
        <div class="overflow-x-auto mt-4">
        <table class="min-w-full bg-white border border-gray-200">
          <thead>
            <tr>
              <th class="px-2 sm:px-4 py-2 sm:py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">Name</th>
              <th class="px-2 sm:px-4 py-2 sm:py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">Termin</th>
              <th class="px-2 sm:px-4 py-2 sm:py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">
                <span class="sm:hidden">Dauer*</span>
                <span class="hidden sm:block">Dauer</span>
              </th>
              <th class="px-2 sm:px-4 py-2 sm:py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b hidden sm:table-cell">Effektiv</th>
            </tr>
          </thead>
          <tbody class="divide-y divide-gray-200">
            <%= for period <- @periods do %>
              <tr class="hover:bg-gray-50">
                <td class="px-2 sm:px-4 py-2 sm:py-3 text-sm font-medium text-gray-900">
                  <%= cond do %>
                    <% is_map_key(period.holiday_or_vacation_type, :colloquial) && period.holiday_or_vacation_type.colloquial && period.holiday_or_vacation_type.colloquial != "" -> %>
                      <%= period.holiday_or_vacation_type.colloquial %>
                    <% is_map_key(period.holiday_or_vacation_type, :colloquial_name) && period.holiday_or_vacation_type.colloquial_name && period.holiday_or_vacation_type.colloquial_name != "" -> %>
                      <%= period.holiday_or_vacation_type.colloquial_name %>
                    <% true -> %>
                      <%= period.holiday_or_vacation_type.name %>
                  <% end %>
                </td>
                <td class="px-2 sm:px-4 py-2 sm:py-3 text-sm text-gray-700">
                  <span class="whitespace-nowrap">
                    <span class="sm:hidden"><%= Calendar.strftime(period.starts_on, "%d.%m.") %></span>
                    <span class="hidden sm:block"><%= Calendar.strftime(period.starts_on, "%d.%m.%Y") %></span>
                    &#8201;&#8211;&#8201;
                    <span class="sm:hidden"><%= Calendar.strftime(period.ends_on, "%d.%m.") %></span>
                    <span class="hidden sm:block"><%= Calendar.strftime(period.ends_on, "%d.%m.%Y") %></span>
                  </span>
                </td>
                <td class="px-2 sm:px-4 py-2 sm:py-3 text-sm text-gray-700">
                  <% days = Date.diff(period.ends_on, period.starts_on) + 1 %>
                  <% effective_duration = calculate_effective_duration(period, @periods) %>
                  <% difference = effective_duration - days %>
                  
                  <span class="sm:hidden">
                    <%= days %> <%= if days == 1, do: "Tag", else: "Tage" %>
                    <%= if difference != 0 do %>
                      <span class="text-gray-500">(+<%= difference %>)</span>
                    <% end %>
                  </span>
                  <span class="hidden sm:block">
                    <%= days %> <%= if days == 1, do: "Tag", else: "Tage" %>
                  </span>
                </td>
                <td class="px-2 sm:px-4 py-2 sm:py-3 text-sm text-gray-700 hidden sm:table-cell">
                  <%= effective_duration %> 
                  <%= if effective_duration == 1, do: "Tag", else: "Tage" %>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
        
        <% has_differences = Enum.any?(@periods, fn period -> 
          days = Date.diff(period.ends_on, period.starts_on) + 1
          effective_duration = calculate_effective_duration(period, @periods)
          effective_duration != days
        end) %>
        
        <%= if has_differences do %>
          <div class="text-xs text-gray-500 mt-2 sm:hidden">
            * Die effektive Dauer enthält angrenzende Wochenenden oder andere Feiertage, die zusätzlich freie Tage ergeben.
          </div>
        <% end %>
      </div>
    <% else %>
      <div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-4" role="alert">
        <p class="font-bold">Information</p>
        <p>Für das Jahr <%= @year %> liegen keine Feriendaten vor.</p>
        <%= if length(@years_with_data) > 0 do %>
          <p class="mt-2">
            Bitte wählen Sie eines der verfügbaren Jahre: 
            <%= for available_year <- @years_with_data do %>
              <%= link "#{available_year}", to: Routes.federal_state_path(@conn, :show_year, @country.slug, @federal_state.slug, available_year), class: "text-blue-600 hover:underline" %><%= if available_year != List.last(@years_with_data), do: ", ", else: "" %>
            <% end %>
          </p>
        <% end %>
      </div>
    <% end %>
  </div>
</div> 