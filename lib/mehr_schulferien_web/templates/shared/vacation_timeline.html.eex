<%
  # Use VacationTimelineHelper to prepare data
  timeline_data = MehrSchulferienWeb.VacationTimelineHelper.prepare_timeline_data(%{
    custom_start_date: assigns[:custom_start_date],
    days_to_display: assigns[:days_to_display],
    days: @days,
    months: @months,
    periods: @periods
  })
%>

<div class="sr-only" aria-live="polite">
  Visuelle Zeitlinie der Ferien und Feiertage für die nächsten Monate. Eine textliche Zusammenfassung ist unten verfügbar.
</div>

<table class="table-fixed border border-gray-300 text-center text-xs" role="presentation" aria-hidden="true">
  <thead>
    <tr>
      <%= for {month_name, days_count, _year, _month} <- timeline_data.months_with_days do %>
        <td colspan="<%= days_count %>" class="border border-gray-200 whitespace-nowrap font-semibold text-left pl-1">
          <%= if days_count > 5 do %>
            <%= if String.length(month_name) > 4 && days_count < 10 do %>
              <%= String.slice(month_name, 0, 3) %>.<% else %><%= month_name %>
            <% end %>
          <% end %>
        </td>
      <% end %>
    </tr>
  </thead>

  <tbody>
    <!-- Tageszeile -->
    <tr>
      <%= for day <- timeline_data.days_to_show do %>
        <% 
          is_weekend = Date.day_of_week(day) > 5  # 6 = Samstag, 7 = Sonntag
          # Prüfen ob Ferien oder Feiertag
          is_vacation = Enum.any?(timeline_data.all_periods, fn period -> 
            Map.get(period, :is_school_vacation, false) &&
            Date.compare(day, period.starts_on) != :lt && 
            Date.compare(day, period.ends_on) != :gt 
          end)
          is_public_holiday = Enum.any?(timeline_data.all_periods, fn period -> 
            Map.get(period, :is_public_holiday, false) &&
            Date.compare(day, period.starts_on) != :lt && 
            Date.compare(day, period.ends_on) != :gt 
          end)
          
          # Klassen für Hintergrundfarbe
          bg_class = cond do
            is_vacation -> "bg-green-600"
            is_public_holiday -> "bg-blue-600"
            is_weekend -> "bg-gray-100"
            true -> ""
          end
        %>
        <td class="w-6 h-5 border-t border-b border-gray-200 <%= bg_class %>"></td>
      <% end %>
    </tr>
  </tbody>
</table>

<div class="mt-4">
  <p class="text-sm font-medium mb-2">Ferien und Feiertage im angezeigten Zeitraum:</p>
  <ul class="text-sm">
    <%= for period <- timeline_data.all_periods do %>
      <% 
        holiday_type = Map.get(period, :holiday_or_vacation_type, %{})
        is_school_vacation = Map.get(period, :is_school_vacation, false)
        name = Map.get(holiday_type, :name, "")
        # CSS-Klasse basierend auf Art des Ereignisses
        marker_color = if is_school_vacation, do: "bg-green-600", else: "bg-blue-600"
      %>
      <li class="flex items-center space-x-2 mb-1">
        <div class="<%= marker_color %> w-3 h-3 rounded-sm flex-shrink-0" aria-hidden="true"></div>
        <span>
          <%= name %> 
          <%= if Date.compare(period.starts_on, period.ends_on) == :eq do %>
            (<%= Calendar.strftime(period.starts_on, "%d.%m.%Y") %>)
          <% else %>
            (<%= Calendar.strftime(period.starts_on, "%d.%m.%Y") %> - <%= Calendar.strftime(period.ends_on, "%d.%m.%Y") %>)
          <% end %>
        </span>
      </li>
    <% end %>
  </ul>
</div> 