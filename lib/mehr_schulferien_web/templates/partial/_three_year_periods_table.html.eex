<div class="table-wrapper">
<table class="table table-striped">
  <% unique_periods = MehrSchulferien.Periods.list_periods_by_vacation_names(@periods) %>
  <% grouped_periods = Enum.group_by(@periods, & &1.holiday_or_vacation_type.name) %>
  
  <% # Extract years that have vacation data %>
  <% years_with_data = @periods |> Enum.map(& &1.starts_on.year) |> Enum.uniq() |> Enum.sort() %>
  
  <thead>
    <tr>
      <th></th>
      <%= for year <- years_with_data do %>
        <th><%= year %></th>
      <% end %>
    </tr>
  </thead>
  <tbody>
    <%= for period <- unique_periods do %>
      <tr>
        <td>
          <%= link MehrSchulferienWeb.PeriodView.vacation_type_name(period), to: Routes.federal_state_path(@conn, :show_holiday_or_vacation_type, @country.slug, @federal_state.slug, period.holiday_or_vacation_type.slug) %>
        </td>
        <% periods = grouped_periods[period.holiday_or_vacation_type.name] %>
        <%= for year <- years_with_data do %>
          <% year_periods = Enum.filter(periods, & &1.starts_on.year == year) %>
          <%= if period = Enum.at(year_periods, 0) do %>
            <td>
              <span>
                <% month = @months[period.starts_on.month] %>
                <%= link to: "##{String.downcase(month)}#{period.starts_on.year}" do %>
                  <%= for period <- year_periods do %>
                    <%= ViewHelpers.format_date_range(period.starts_on, period.ends_on, :short) %><br>
                  <% end %>
                <% end %>
              </span>
            </td>
          <% else %>
            <td></td>
          <% end %>
        <% end %>
      </tr>
    <% end %>
  </tbody>
</table>
</div>
